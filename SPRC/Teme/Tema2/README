Taner Mustafa - 341C1 - SPRC - Tema 2

Tehnologia folosita:
 - pentru baza de date: MySQL (motivatie: cu asta am mai lucrat)
 - pentru cod: Python + Flask (motivatie: am mai lucrat cu asta)
 - conector cod - baza de date: SQLAlchemy (motivatie: asta am gasit pe net prima oara)

Serviciul `mysql` se build-uieste mai greu decat aplicatia si de aceea aplicatia nu se poate conecta la
baza de date prima oara si da fail, asa ca am implementat un retry in aplicatie, la fiecare 10 secunde sa incerce
sa se conecteze la baza de date.
Altfel, trebuia rulat `docker-compose up [--build]` de 2 ori.

Intrare in baza de date:
	> docker-compose up [--build]
	> docker-compose exec mysql_meteo_db bash
		> mysql -u root -h mysql_meteo_db -p #1234
		http://g2pc1.bu.edu/~qzpeng/manual/MySQL%20Commands.html
			> show databases;
			> use meteo;
			> show tables;
			> show columns from <table>;

Comenzi creare database:
	"""
		CREATE DATABASE IF NOT EXISTS meteo;
	    USE meteo;

	    CREATE TABLE IF NOT EXISTS tari(
            id INT(5) NOT NULL AUTO_INCREMENT PRIMARY KEY,
            nume_tara varchar(50) UNIQUE,
            latitudine DOUBLE,
            longitudine DOUBLE
        );

	    CREATE TABLE IF NOT EXISTS orase(
            id INT(5) NOT NULL AUTO_INCREMENT PRIMARY KEY,
            id_tara INT(5),
            nume_oras varchar(50),
            latitudine DOUBLE,
            longitudine DOUBLE,

            FOREIGN KEY (id_tara) REFERENCES tari(id),
            UNIQUE KEY unique_index (id_tara, nume_oras)
        );

	    CREATE TABLE IF NOT EXISTS temperaturi(
            id INT(5) NOT NULL AUTO_INCREMENT PRIMARY KEY,
            id_oras INT(5),
            valoare DOUBLE,
            time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

            FOREIGN KEY (id_oras) REFERENCES orase(id),
            UNIQUE KEY unique_index (id_oras, time_stamp)
        );
	"""

